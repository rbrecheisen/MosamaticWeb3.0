services:

  db:
    image: postgres:16-alpine
    container_name: mosamatic3_postgres
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=foobar
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d db"]
      interval: 30s
      timeout: 10s
      retries: 5
    expose:
      - 5432
    ports:
      - 5432:5432  # Required for running Django outside Docker but using PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    build: ./nginx
    image: brecheisen/mosamatic3-nginx:latest
    container_name: mosamatic3_nginx
    ports:
      - "8000:8000"
    volumes:
      - data:/data
    depends_on:
      - web

  redis:
    image: redis:alpine
    expose:
      - 6379
    ports:
      - 6379:6379

  celery:
    build: .
    command: celery --app mosamatic3 worker --loglevel=info -n celery@%h
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=foobar
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
    healthcheck:
      test: ["CMD", "celery", "--app", "mosamatic3", "inspect", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      web:
        condition: service_healthy

  celerybeat:
    build: .
    command: celery --app mosamatic3 beat --loglevel=info
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=foobar
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
    depends_on:
      celery:
        condition: service_healthy

  web:
    build: .
    image: brecheisen/mosamatic3-web:latest
    container_name: mosamatic3_web
    environment:
      - DATA_DIR=/data
      - POSTGRES_DB=db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=foobar
      - POSTGRES_HOST=mosamatic3_postgres # When you run Django in Docker set the host
      - POSTGRES_PORT=5432
      - DOCKER=true
      - ADMIN_USER=admin
      - ADMIN_PASSWORD=Arturo4ever
      - SECRET_KEY=1234
    volumes:
      - data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      db:
        condition: service_healthy

volumes:

  data:
  postgres_data: